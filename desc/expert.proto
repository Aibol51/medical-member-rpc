syntax = "proto3";

// Expert message

message ExpertInfo {
  optional uint64 id = 1;
  optional int64 created_at = 2;
  optional int64 updated_at = 3;
  // Status 1: normal 2: ban | 状态 1 正常 2 禁用
  optional uint32 status = 4;
  // Sort Number | 排序编号
  optional uint32 sort = 5;
  // Chinese name | 中文名称
  optional string name_zh = 6;
  // English name | 英文名称
  optional string name_en = 7;
  // Russian name | 俄语名称
  optional string name_ru = 8;
  // Kazakh name | 哈萨克语名称
  optional string name_kk = 9;
  // Chinese content | 中文内容
  optional string content_zh = 10;
  // English content | 英文内容
  optional string content_en = 11;
  // Russian content | 俄语内容
  optional string content_ru = 12;
  // Kazakh content | 哈萨克语内容
  optional string content_kk = 13;
  // Cover image URL | 封面图片URL
  optional string cover_url = 14;
}

message ExpertListResp {
  uint64 total = 1;
  repeated ExpertInfo data = 2;
}

message ExpertListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  optional string name_zh = 3;
  optional string name_en = 4;
  optional string name_ru = 5;
}


service Mms {

  // Expert management
  // group: expert
  rpc getExpertList (ExpertListReq) returns (ExpertListResp);
  // group: expert
  rpc getExpertById (IDReq) returns (ExpertInfo);

}