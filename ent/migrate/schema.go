// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AppointmentsColumns holds the columns for the "appointments" table.
	AppointmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "UUID"},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "patient_name", Type: field.TypeString, Nullable: true, Comment: "Patient name | 患者姓名"},
		{Name: "phone_number", Type: field.TypeString, Nullable: true, Comment: "Phone number | 联系电话"},
		{Name: "id_card", Type: field.TypeString, Nullable: true, Comment: "ID card number | 身份证号"},
		{Name: "gender", Type: field.TypeInt32, Nullable: true, Comment: "Gender 1:male 2:female | 性别 1:男 2:女"},
		{Name: "age", Type: field.TypeInt32, Nullable: true, Comment: "Age | 年龄"},
		{Name: "appointment_time", Type: field.TypeInt64, Nullable: true, Comment: "Appointment time | 预约时间"},
		{Name: "symptoms", Type: field.TypeString, Nullable: true, Comment: "Symptoms description | 症状描述"},
		{Name: "status", Type: field.TypeInt32, Nullable: true, Comment: "Status 1:pending 2:confirmed 3:completed 4:cancelled 5:expired | 状态 1:待确认 2:已确认 3:已完成 4:已取消 5:已过期", Default: 1},
		{Name: "remarks", Type: field.TypeString, Nullable: true, Comment: "Remarks | 备注信息"},
		{Name: "user_id", Type: field.TypeString, Nullable: true, Comment: "User ID | 用户ID"},
	}
	// AppointmentsTable holds the schema information for the "appointments" table.
	AppointmentsTable = &schema.Table{
		Name:       "appointments",
		Columns:    AppointmentsColumns,
		PrimaryKey: []*schema.Column{AppointmentsColumns[0]},
	}
	// MedicinesColumns holds the columns for the "medicines" table.
	MedicinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "name", Type: field.TypeString, Comment: "Medicine name | 药品名称"},
		{Name: "quantity", Type: field.TypeUint32, Comment: "Quantity in stock | 库存数量"},
		{Name: "description", Type: field.TypeString, Nullable: true, Comment: "Description | 药品描述"},
		{Name: "remarks", Type: field.TypeString, Nullable: true, Comment: "Remarks | 备注信息"},
		{Name: "images", Type: field.TypeString, Nullable: true, Comment: "Images | 图片路径", SchemaType: map[string]string{"mysql": "varchar(512)"}},
	}
	// MedicinesTable holds the schema information for the "medicines" table.
	MedicinesTable = &schema.Table{
		Name:       "medicines",
		Columns:    MedicinesColumns,
		PrimaryKey: []*schema.Column{MedicinesColumns[0]},
	}
	// MmsMembersColumns holds the columns for the "mms_members" table.
	MmsMembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "UUID"},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "username", Type: field.TypeString, Unique: true, Comment: "Member's login name | 登录名"},
		{Name: "password", Type: field.TypeString, Comment: "Password | 密码"},
		{Name: "nickname", Type: field.TypeString, Unique: true, Comment: "Nickname | 昵称"},
		{Name: "mobile", Type: field.TypeString, Nullable: true, Comment: "Mobile number | 手机号"},
		{Name: "email", Type: field.TypeString, Nullable: true, Comment: "Email | 邮箱号"},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Comment: "Avatar | 头像路径", Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "wechat_open_id", Type: field.TypeString, Nullable: true, Comment: "Wechat Open ID | 微信 Open ID"},
		{Name: "expired_at", Type: field.TypeTime, Nullable: true, Comment: "Member expired time | 会员到期时间", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "rank_id", Type: field.TypeUint64, Nullable: true, Comment: "Member Rank ID | 会员等级ID", Default: 2},
	}
	// MmsMembersTable holds the schema information for the "mms_members" table.
	MmsMembersTable = &schema.Table{
		Name:       "mms_members",
		Columns:    MmsMembersColumns,
		PrimaryKey: []*schema.Column{MmsMembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "mms_members_mms_ranks_ranks",
				Columns:    []*schema.Column{MmsMembersColumns[12]},
				RefColumns: []*schema.Column{MmsRanksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "member_username_email",
				Unique:  true,
				Columns: []*schema.Column{MmsMembersColumns[4], MmsMembersColumns[8]},
			},
			{
				Name:    "member_wechat_open_id",
				Unique:  true,
				Columns: []*schema.Column{MmsMembersColumns[10]},
			},
		},
	}
	// MmsRanksColumns holds the columns for the "mms_ranks" table.
	MmsRanksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "name", Type: field.TypeString, Comment: "Rank name | 等级名称"},
		{Name: "code", Type: field.TypeString, Comment: "Rank code | 等级码"},
		{Name: "description", Type: field.TypeString, Comment: "Rank description | 等级描述"},
		{Name: "remark", Type: field.TypeString, Comment: "Remark | 备注"},
	}
	// MmsRanksTable holds the schema information for the "mms_ranks" table.
	MmsRanksTable = &schema.Table{
		Name:       "mms_ranks",
		Columns:    MmsRanksColumns,
		PrimaryKey: []*schema.Column{MmsRanksColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "memberrank_code",
				Unique:  true,
				Columns: []*schema.Column{MmsRanksColumns[4]},
			},
		},
	}
	// NewsColumns holds the columns for the "news" table.
	NewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "title_zh", Type: field.TypeString, Nullable: true, Comment: "Chinese title | 中文标题"},
		{Name: "title_en", Type: field.TypeString, Nullable: true, Comment: "English title | 英文标题"},
		{Name: "title_ru", Type: field.TypeString, Nullable: true, Comment: "Russian title | 俄语标题"},
		{Name: "title_kk", Type: field.TypeString, Nullable: true, Comment: "Kazakh title | 哈萨克语标题"},
		{Name: "content_zh", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Chinese content | 中文内容"},
		{Name: "content_en", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "English content | 英文内容"},
		{Name: "content_ru", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Russian content | 俄语内容"},
		{Name: "content_kk", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Kazakh content | 哈萨克语内容"},
		{Name: "cover_url", Type: field.TypeString, Nullable: true, Comment: "Cover image URL | 封面图片URL"},
	}
	// NewsTable holds the schema information for the "news" table.
	NewsTable = &schema.Table{
		Name:       "news",
		Columns:    NewsColumns,
		PrimaryKey: []*schema.Column{NewsColumns[0]},
	}
	// MmsOauthProvidersColumns holds the columns for the "mms_oauth_providers" table.
	MmsOauthProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "The provider's name | 提供商名称"},
		{Name: "client_id", Type: field.TypeString, Comment: "The client id | 客户端 id"},
		{Name: "client_secret", Type: field.TypeString, Comment: "The client secret | 客户端密钥"},
		{Name: "redirect_url", Type: field.TypeString, Comment: "The redirect url | 跳转地址"},
		{Name: "scopes", Type: field.TypeString, Comment: "The scopes | 权限范围"},
		{Name: "auth_url", Type: field.TypeString, Comment: "The auth url of the provider | 认证地址"},
		{Name: "token_url", Type: field.TypeString, Comment: "The token url of the provider | 获取 token地址"},
		{Name: "auth_style", Type: field.TypeUint64, Comment: "The auth style, 0: auto detect 1: third party log in 2: log in with username and password"},
		{Name: "info_url", Type: field.TypeString, Comment: "The URL to request user information by token | 用户信息请求地址"},
	}
	// MmsOauthProvidersTable holds the schema information for the "mms_oauth_providers" table.
	MmsOauthProvidersTable = &schema.Table{
		Name:       "mms_oauth_providers",
		Columns:    MmsOauthProvidersColumns,
		PrimaryKey: []*schema.Column{MmsOauthProvidersColumns[0]},
	}
	// SwiperColumns holds the columns for the "Swiper" table.
	SwiperColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "sort", Type: field.TypeUint32, Comment: "Sort Number | 排序编号", Default: 1},
		{Name: "title_zh", Type: field.TypeString, Nullable: true, Comment: "Chinese title | 中文标题"},
		{Name: "title_en", Type: field.TypeString, Nullable: true, Comment: "English title | 英文标题"},
		{Name: "title_ru", Type: field.TypeString, Nullable: true, Comment: "Russian title | 俄语标题"},
		{Name: "title_kk", Type: field.TypeString, Nullable: true, Comment: "Kazakh title | 哈萨克语标题"},
		{Name: "banner_zh", Type: field.TypeString, Nullable: true, Comment: "Chinese banner image | 中文轮播图"},
		{Name: "banner_en", Type: field.TypeString, Nullable: true, Comment: "English banner image | 英文轮播图"},
		{Name: "banner_ru", Type: field.TypeString, Nullable: true, Comment: "Russian banner image | 俄语轮播图"},
		{Name: "banner_kk", Type: field.TypeString, Nullable: true, Comment: "Kazakh banner image | 哈萨克语轮播图"},
		{Name: "content_zh", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Chinese content | 中文内容"},
		{Name: "content_en", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "English content | 英文内容"},
		{Name: "content_ru", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Russian content | 俄语内容"},
		{Name: "content_kk", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "Kazakh content | 哈萨克语内容"},
		{Name: "jump_url", Type: field.TypeString, Nullable: true, Comment: "Jump Url | 跳转地址"},
	}
	// SwiperTable holds the schema information for the "Swiper" table.
	SwiperTable = &schema.Table{
		Name:       "Swiper",
		Columns:    SwiperColumns,
		PrimaryKey: []*schema.Column{SwiperColumns[0]},
	}
	// MmsTokensColumns holds the columns for the "mms_tokens" table.
	MmsTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Comment: "UUID"},
		{Name: "created_at", Type: field.TypeTime, Comment: "Create Time | 创建日期"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "Update Time | 修改日期"},
		{Name: "status", Type: field.TypeUint8, Nullable: true, Comment: "Status 1: normal 2: ban | 状态 1 正常 2 禁用", Default: 1},
		{Name: "uuid", Type: field.TypeUUID, Comment: " User's UUID | 用户的UUID"},
		{Name: "token", Type: field.TypeString, Comment: "Token string | Token 字符串"},
		{Name: "username", Type: field.TypeString, Comment: "Username | 用户名", Default: "unknown"},
		{Name: "source", Type: field.TypeString, Comment: "Log in source such as GitHub | Token 来源 （本地为core, 第三方如github等）"},
		{Name: "expired_at", Type: field.TypeTime, Comment: " Expire time | 过期时间"},
	}
	// MmsTokensTable holds the schema information for the "mms_tokens" table.
	MmsTokensTable = &schema.Table{
		Name:       "mms_tokens",
		Columns:    MmsTokensColumns,
		PrimaryKey: []*schema.Column{MmsTokensColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "mms_token_uuid",
				Unique:  false,
				Columns: []*schema.Column{MmsTokensColumns[4]},
			},
			{
				Name:    "mms_token_expired_at",
				Unique:  false,
				Columns: []*schema.Column{MmsTokensColumns[8]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AppointmentsTable,
		MedicinesTable,
		MmsMembersTable,
		MmsRanksTable,
		NewsTable,
		MmsOauthProvidersTable,
		SwiperTable,
		MmsTokensTable,
	}
)

func init() {
	AppointmentsTable.Annotation = &entsql.Annotation{
		Table: "appointments",
	}
	MedicinesTable.Annotation = &entsql.Annotation{
		Table: "medicines",
	}
	MmsMembersTable.ForeignKeys[0].RefTable = MmsRanksTable
	MmsMembersTable.Annotation = &entsql.Annotation{
		Table: "mms_members",
	}
	MmsRanksTable.Annotation = &entsql.Annotation{
		Table: "mms_ranks",
	}
	NewsTable.Annotation = &entsql.Annotation{
		Table: "news",
	}
	MmsOauthProvidersTable.Annotation = &entsql.Annotation{
		Table: "mms_oauth_providers",
	}
	SwiperTable.Annotation = &entsql.Annotation{
		Table: "Swiper",
	}
	MmsTokensTable.Annotation = &entsql.Annotation{
		Table: "mms_tokens",
	}
}
