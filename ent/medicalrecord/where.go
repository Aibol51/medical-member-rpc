// Code generated by ent, DO NOT EDIT.

package medicalrecord

import (
	"time"

	"entgo.io/ent/dialect/sql"
	uuid "github.com/gofrs/uuid/v5"
	"github.com/suyuan32/simple-admin-member-rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUpdatedAt, v))
}

// PatientName applies equality check predicate on the "patient_name" field. It's identical to PatientNameEQ.
func PatientName(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPatientName, v))
}

// Gender applies equality check predicate on the "gender" field. It's identical to GenderEQ.
func Gender(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldGender, v))
}

// Age applies equality check predicate on the "age" field. It's identical to AgeEQ.
func Age(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAge, v))
}

// IDCardNumber applies equality check predicate on the "id_card_number" field. It's identical to IDCardNumberEQ.
func IDCardNumber(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldIDCardNumber, v))
}

// PhoneNumber applies equality check predicate on the "phone_number" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPhoneNumber, v))
}

// ChiefComplaint applies equality check predicate on the "chief_complaint" field. It's identical to ChiefComplaintEQ.
func ChiefComplaint(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldChiefComplaint, v))
}

// PresentIllness applies equality check predicate on the "present_illness" field. It's identical to PresentIllnessEQ.
func PresentIllness(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPresentIllness, v))
}

// PastHistory applies equality check predicate on the "past_history" field. It's identical to PastHistoryEQ.
func PastHistory(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPastHistory, v))
}

// SmokingHistory applies equality check predicate on the "smoking_history" field. It's identical to SmokingHistoryEQ.
func SmokingHistory(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldSmokingHistory, v))
}

// DrinkingHistory applies equality check predicate on the "drinking_history" field. It's identical to DrinkingHistoryEQ.
func DrinkingHistory(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDrinkingHistory, v))
}

// AllergyHistory applies equality check predicate on the "allergy_history" field. It's identical to AllergyHistoryEQ.
func AllergyHistory(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAllergyHistory, v))
}

// HeartRate applies equality check predicate on the "heart_rate" field. It's identical to HeartRateEQ.
func HeartRate(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldHeartRate, v))
}

// BloodPressure applies equality check predicate on the "blood_pressure" field. It's identical to BloodPressureEQ.
func BloodPressure(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldBloodPressure, v))
}

// OxygenSaturation applies equality check predicate on the "oxygen_saturation" field. It's identical to OxygenSaturationEQ.
func OxygenSaturation(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldOxygenSaturation, v))
}

// BloodGlucose applies equality check predicate on the "blood_glucose" field. It's identical to BloodGlucoseEQ.
func BloodGlucose(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldBloodGlucose, v))
}

// Weight applies equality check predicate on the "weight" field. It's identical to WeightEQ.
func Weight(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldWeight, v))
}

// WaistCircumference applies equality check predicate on the "waist_circumference" field. It's identical to WaistCircumferenceEQ.
func WaistCircumference(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldWaistCircumference, v))
}

// BodyFat applies equality check predicate on the "body_fat" field. It's identical to BodyFatEQ.
func BodyFat(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldBodyFat, v))
}

// Diagnosis applies equality check predicate on the "diagnosis" field. It's identical to DiagnosisEQ.
func Diagnosis(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDiagnosis, v))
}

// DietTherapy applies equality check predicate on the "diet_therapy" field. It's identical to DietTherapyEQ.
func DietTherapy(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDietTherapy, v))
}

// ExerciseTherapy applies equality check predicate on the "exercise_therapy" field. It's identical to ExerciseTherapyEQ.
func ExerciseTherapy(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldExerciseTherapy, v))
}

// MedicationTherapy applies equality check predicate on the "medication_therapy" field. It's identical to MedicationTherapyEQ.
func MedicationTherapy(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldMedicationTherapy, v))
}

// TreatmentPlan applies equality check predicate on the "treatment_plan" field. It's identical to TreatmentPlanEQ.
func TreatmentPlan(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldTreatmentPlan, v))
}

// DoctorID applies equality check predicate on the "doctor_id" field. It's identical to DoctorIDEQ.
func DoctorID(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDoctorID, v))
}

// AppointmentID applies equality check predicate on the "appointment_id" field. It's identical to AppointmentIDEQ.
func AppointmentID(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAppointmentID, v))
}

// Remarks applies equality check predicate on the "remarks" field. It's identical to RemarksEQ.
func Remarks(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldRemarks, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUserID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldUpdatedAt, v))
}

// PatientNameEQ applies the EQ predicate on the "patient_name" field.
func PatientNameEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPatientName, v))
}

// PatientNameNEQ applies the NEQ predicate on the "patient_name" field.
func PatientNameNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldPatientName, v))
}

// PatientNameIn applies the In predicate on the "patient_name" field.
func PatientNameIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldPatientName, vs...))
}

// PatientNameNotIn applies the NotIn predicate on the "patient_name" field.
func PatientNameNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldPatientName, vs...))
}

// PatientNameGT applies the GT predicate on the "patient_name" field.
func PatientNameGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldPatientName, v))
}

// PatientNameGTE applies the GTE predicate on the "patient_name" field.
func PatientNameGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldPatientName, v))
}

// PatientNameLT applies the LT predicate on the "patient_name" field.
func PatientNameLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldPatientName, v))
}

// PatientNameLTE applies the LTE predicate on the "patient_name" field.
func PatientNameLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldPatientName, v))
}

// PatientNameContains applies the Contains predicate on the "patient_name" field.
func PatientNameContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldPatientName, v))
}

// PatientNameHasPrefix applies the HasPrefix predicate on the "patient_name" field.
func PatientNameHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldPatientName, v))
}

// PatientNameHasSuffix applies the HasSuffix predicate on the "patient_name" field.
func PatientNameHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldPatientName, v))
}

// PatientNameEqualFold applies the EqualFold predicate on the "patient_name" field.
func PatientNameEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldPatientName, v))
}

// PatientNameContainsFold applies the ContainsFold predicate on the "patient_name" field.
func PatientNameContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldPatientName, v))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldGender, vs...))
}

// GenderGT applies the GT predicate on the "gender" field.
func GenderGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldGender, v))
}

// GenderGTE applies the GTE predicate on the "gender" field.
func GenderGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldGender, v))
}

// GenderLT applies the LT predicate on the "gender" field.
func GenderLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldGender, v))
}

// GenderLTE applies the LTE predicate on the "gender" field.
func GenderLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldGender, v))
}

// AgeEQ applies the EQ predicate on the "age" field.
func AgeEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAge, v))
}

// AgeNEQ applies the NEQ predicate on the "age" field.
func AgeNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldAge, v))
}

// AgeIn applies the In predicate on the "age" field.
func AgeIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldAge, vs...))
}

// AgeNotIn applies the NotIn predicate on the "age" field.
func AgeNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldAge, vs...))
}

// AgeGT applies the GT predicate on the "age" field.
func AgeGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldAge, v))
}

// AgeGTE applies the GTE predicate on the "age" field.
func AgeGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldAge, v))
}

// AgeLT applies the LT predicate on the "age" field.
func AgeLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldAge, v))
}

// AgeLTE applies the LTE predicate on the "age" field.
func AgeLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldAge, v))
}

// IDCardNumberEQ applies the EQ predicate on the "id_card_number" field.
func IDCardNumberEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldIDCardNumber, v))
}

// IDCardNumberNEQ applies the NEQ predicate on the "id_card_number" field.
func IDCardNumberNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldIDCardNumber, v))
}

// IDCardNumberIn applies the In predicate on the "id_card_number" field.
func IDCardNumberIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldIDCardNumber, vs...))
}

// IDCardNumberNotIn applies the NotIn predicate on the "id_card_number" field.
func IDCardNumberNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldIDCardNumber, vs...))
}

// IDCardNumberGT applies the GT predicate on the "id_card_number" field.
func IDCardNumberGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldIDCardNumber, v))
}

// IDCardNumberGTE applies the GTE predicate on the "id_card_number" field.
func IDCardNumberGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldIDCardNumber, v))
}

// IDCardNumberLT applies the LT predicate on the "id_card_number" field.
func IDCardNumberLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldIDCardNumber, v))
}

// IDCardNumberLTE applies the LTE predicate on the "id_card_number" field.
func IDCardNumberLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldIDCardNumber, v))
}

// IDCardNumberContains applies the Contains predicate on the "id_card_number" field.
func IDCardNumberContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldIDCardNumber, v))
}

// IDCardNumberHasPrefix applies the HasPrefix predicate on the "id_card_number" field.
func IDCardNumberHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldIDCardNumber, v))
}

// IDCardNumberHasSuffix applies the HasSuffix predicate on the "id_card_number" field.
func IDCardNumberHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldIDCardNumber, v))
}

// IDCardNumberIsNil applies the IsNil predicate on the "id_card_number" field.
func IDCardNumberIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldIDCardNumber))
}

// IDCardNumberNotNil applies the NotNil predicate on the "id_card_number" field.
func IDCardNumberNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldIDCardNumber))
}

// IDCardNumberEqualFold applies the EqualFold predicate on the "id_card_number" field.
func IDCardNumberEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldIDCardNumber, v))
}

// IDCardNumberContainsFold applies the ContainsFold predicate on the "id_card_number" field.
func IDCardNumberContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldIDCardNumber, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phone_number" field.
func PhoneNumberEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phone_number" field.
func PhoneNumberNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phone_number" field.
func PhoneNumberIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phone_number" field.
func PhoneNumberNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phone_number" field.
func PhoneNumberGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phone_number" field.
func PhoneNumberGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phone_number" field.
func PhoneNumberLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phone_number" field.
func PhoneNumberLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phone_number" field.
func PhoneNumberContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phone_number" field.
func PhoneNumberHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phone_number" field.
func PhoneNumberHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phone_number" field.
func PhoneNumberEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phone_number" field.
func PhoneNumberContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// ChiefComplaintEQ applies the EQ predicate on the "chief_complaint" field.
func ChiefComplaintEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldChiefComplaint, v))
}

// ChiefComplaintNEQ applies the NEQ predicate on the "chief_complaint" field.
func ChiefComplaintNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldChiefComplaint, v))
}

// ChiefComplaintIn applies the In predicate on the "chief_complaint" field.
func ChiefComplaintIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldChiefComplaint, vs...))
}

// ChiefComplaintNotIn applies the NotIn predicate on the "chief_complaint" field.
func ChiefComplaintNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldChiefComplaint, vs...))
}

// ChiefComplaintGT applies the GT predicate on the "chief_complaint" field.
func ChiefComplaintGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldChiefComplaint, v))
}

// ChiefComplaintGTE applies the GTE predicate on the "chief_complaint" field.
func ChiefComplaintGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldChiefComplaint, v))
}

// ChiefComplaintLT applies the LT predicate on the "chief_complaint" field.
func ChiefComplaintLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldChiefComplaint, v))
}

// ChiefComplaintLTE applies the LTE predicate on the "chief_complaint" field.
func ChiefComplaintLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldChiefComplaint, v))
}

// ChiefComplaintContains applies the Contains predicate on the "chief_complaint" field.
func ChiefComplaintContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldChiefComplaint, v))
}

// ChiefComplaintHasPrefix applies the HasPrefix predicate on the "chief_complaint" field.
func ChiefComplaintHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldChiefComplaint, v))
}

// ChiefComplaintHasSuffix applies the HasSuffix predicate on the "chief_complaint" field.
func ChiefComplaintHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldChiefComplaint, v))
}

// ChiefComplaintIsNil applies the IsNil predicate on the "chief_complaint" field.
func ChiefComplaintIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldChiefComplaint))
}

// ChiefComplaintNotNil applies the NotNil predicate on the "chief_complaint" field.
func ChiefComplaintNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldChiefComplaint))
}

// ChiefComplaintEqualFold applies the EqualFold predicate on the "chief_complaint" field.
func ChiefComplaintEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldChiefComplaint, v))
}

// ChiefComplaintContainsFold applies the ContainsFold predicate on the "chief_complaint" field.
func ChiefComplaintContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldChiefComplaint, v))
}

// PresentIllnessEQ applies the EQ predicate on the "present_illness" field.
func PresentIllnessEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPresentIllness, v))
}

// PresentIllnessNEQ applies the NEQ predicate on the "present_illness" field.
func PresentIllnessNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldPresentIllness, v))
}

// PresentIllnessIn applies the In predicate on the "present_illness" field.
func PresentIllnessIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldPresentIllness, vs...))
}

// PresentIllnessNotIn applies the NotIn predicate on the "present_illness" field.
func PresentIllnessNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldPresentIllness, vs...))
}

// PresentIllnessGT applies the GT predicate on the "present_illness" field.
func PresentIllnessGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldPresentIllness, v))
}

// PresentIllnessGTE applies the GTE predicate on the "present_illness" field.
func PresentIllnessGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldPresentIllness, v))
}

// PresentIllnessLT applies the LT predicate on the "present_illness" field.
func PresentIllnessLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldPresentIllness, v))
}

// PresentIllnessLTE applies the LTE predicate on the "present_illness" field.
func PresentIllnessLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldPresentIllness, v))
}

// PresentIllnessContains applies the Contains predicate on the "present_illness" field.
func PresentIllnessContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldPresentIllness, v))
}

// PresentIllnessHasPrefix applies the HasPrefix predicate on the "present_illness" field.
func PresentIllnessHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldPresentIllness, v))
}

// PresentIllnessHasSuffix applies the HasSuffix predicate on the "present_illness" field.
func PresentIllnessHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldPresentIllness, v))
}

// PresentIllnessIsNil applies the IsNil predicate on the "present_illness" field.
func PresentIllnessIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldPresentIllness))
}

// PresentIllnessNotNil applies the NotNil predicate on the "present_illness" field.
func PresentIllnessNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldPresentIllness))
}

// PresentIllnessEqualFold applies the EqualFold predicate on the "present_illness" field.
func PresentIllnessEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldPresentIllness, v))
}

// PresentIllnessContainsFold applies the ContainsFold predicate on the "present_illness" field.
func PresentIllnessContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldPresentIllness, v))
}

// PastHistoryEQ applies the EQ predicate on the "past_history" field.
func PastHistoryEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPastHistory, v))
}

// PastHistoryNEQ applies the NEQ predicate on the "past_history" field.
func PastHistoryNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldPastHistory, v))
}

// PastHistoryIn applies the In predicate on the "past_history" field.
func PastHistoryIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldPastHistory, vs...))
}

// PastHistoryNotIn applies the NotIn predicate on the "past_history" field.
func PastHistoryNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldPastHistory, vs...))
}

// PastHistoryGT applies the GT predicate on the "past_history" field.
func PastHistoryGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldPastHistory, v))
}

// PastHistoryGTE applies the GTE predicate on the "past_history" field.
func PastHistoryGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldPastHistory, v))
}

// PastHistoryLT applies the LT predicate on the "past_history" field.
func PastHistoryLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldPastHistory, v))
}

// PastHistoryLTE applies the LTE predicate on the "past_history" field.
func PastHistoryLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldPastHistory, v))
}

// PastHistoryContains applies the Contains predicate on the "past_history" field.
func PastHistoryContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldPastHistory, v))
}

// PastHistoryHasPrefix applies the HasPrefix predicate on the "past_history" field.
func PastHistoryHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldPastHistory, v))
}

// PastHistoryHasSuffix applies the HasSuffix predicate on the "past_history" field.
func PastHistoryHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldPastHistory, v))
}

// PastHistoryIsNil applies the IsNil predicate on the "past_history" field.
func PastHistoryIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldPastHistory))
}

// PastHistoryNotNil applies the NotNil predicate on the "past_history" field.
func PastHistoryNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldPastHistory))
}

// PastHistoryEqualFold applies the EqualFold predicate on the "past_history" field.
func PastHistoryEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldPastHistory, v))
}

// PastHistoryContainsFold applies the ContainsFold predicate on the "past_history" field.
func PastHistoryContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldPastHistory, v))
}

// SmokingHistoryEQ applies the EQ predicate on the "smoking_history" field.
func SmokingHistoryEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldSmokingHistory, v))
}

// SmokingHistoryNEQ applies the NEQ predicate on the "smoking_history" field.
func SmokingHistoryNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldSmokingHistory, v))
}

// SmokingHistoryIn applies the In predicate on the "smoking_history" field.
func SmokingHistoryIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldSmokingHistory, vs...))
}

// SmokingHistoryNotIn applies the NotIn predicate on the "smoking_history" field.
func SmokingHistoryNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldSmokingHistory, vs...))
}

// SmokingHistoryGT applies the GT predicate on the "smoking_history" field.
func SmokingHistoryGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldSmokingHistory, v))
}

// SmokingHistoryGTE applies the GTE predicate on the "smoking_history" field.
func SmokingHistoryGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldSmokingHistory, v))
}

// SmokingHistoryLT applies the LT predicate on the "smoking_history" field.
func SmokingHistoryLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldSmokingHistory, v))
}

// SmokingHistoryLTE applies the LTE predicate on the "smoking_history" field.
func SmokingHistoryLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldSmokingHistory, v))
}

// SmokingHistoryIsNil applies the IsNil predicate on the "smoking_history" field.
func SmokingHistoryIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldSmokingHistory))
}

// SmokingHistoryNotNil applies the NotNil predicate on the "smoking_history" field.
func SmokingHistoryNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldSmokingHistory))
}

// DrinkingHistoryEQ applies the EQ predicate on the "drinking_history" field.
func DrinkingHistoryEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDrinkingHistory, v))
}

// DrinkingHistoryNEQ applies the NEQ predicate on the "drinking_history" field.
func DrinkingHistoryNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDrinkingHistory, v))
}

// DrinkingHistoryIn applies the In predicate on the "drinking_history" field.
func DrinkingHistoryIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDrinkingHistory, vs...))
}

// DrinkingHistoryNotIn applies the NotIn predicate on the "drinking_history" field.
func DrinkingHistoryNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDrinkingHistory, vs...))
}

// DrinkingHistoryGT applies the GT predicate on the "drinking_history" field.
func DrinkingHistoryGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDrinkingHistory, v))
}

// DrinkingHistoryGTE applies the GTE predicate on the "drinking_history" field.
func DrinkingHistoryGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDrinkingHistory, v))
}

// DrinkingHistoryLT applies the LT predicate on the "drinking_history" field.
func DrinkingHistoryLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDrinkingHistory, v))
}

// DrinkingHistoryLTE applies the LTE predicate on the "drinking_history" field.
func DrinkingHistoryLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDrinkingHistory, v))
}

// DrinkingHistoryIsNil applies the IsNil predicate on the "drinking_history" field.
func DrinkingHistoryIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDrinkingHistory))
}

// DrinkingHistoryNotNil applies the NotNil predicate on the "drinking_history" field.
func DrinkingHistoryNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDrinkingHistory))
}

// AllergyHistoryEQ applies the EQ predicate on the "allergy_history" field.
func AllergyHistoryEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAllergyHistory, v))
}

// AllergyHistoryNEQ applies the NEQ predicate on the "allergy_history" field.
func AllergyHistoryNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldAllergyHistory, v))
}

// AllergyHistoryIn applies the In predicate on the "allergy_history" field.
func AllergyHistoryIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldAllergyHistory, vs...))
}

// AllergyHistoryNotIn applies the NotIn predicate on the "allergy_history" field.
func AllergyHistoryNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldAllergyHistory, vs...))
}

// AllergyHistoryGT applies the GT predicate on the "allergy_history" field.
func AllergyHistoryGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldAllergyHistory, v))
}

// AllergyHistoryGTE applies the GTE predicate on the "allergy_history" field.
func AllergyHistoryGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldAllergyHistory, v))
}

// AllergyHistoryLT applies the LT predicate on the "allergy_history" field.
func AllergyHistoryLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldAllergyHistory, v))
}

// AllergyHistoryLTE applies the LTE predicate on the "allergy_history" field.
func AllergyHistoryLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldAllergyHistory, v))
}

// AllergyHistoryIsNil applies the IsNil predicate on the "allergy_history" field.
func AllergyHistoryIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldAllergyHistory))
}

// AllergyHistoryNotNil applies the NotNil predicate on the "allergy_history" field.
func AllergyHistoryNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldAllergyHistory))
}

// HeartRateEQ applies the EQ predicate on the "heart_rate" field.
func HeartRateEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldHeartRate, v))
}

// HeartRateNEQ applies the NEQ predicate on the "heart_rate" field.
func HeartRateNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldHeartRate, v))
}

// HeartRateIn applies the In predicate on the "heart_rate" field.
func HeartRateIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldHeartRate, vs...))
}

// HeartRateNotIn applies the NotIn predicate on the "heart_rate" field.
func HeartRateNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldHeartRate, vs...))
}

// HeartRateGT applies the GT predicate on the "heart_rate" field.
func HeartRateGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldHeartRate, v))
}

// HeartRateGTE applies the GTE predicate on the "heart_rate" field.
func HeartRateGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldHeartRate, v))
}

// HeartRateLT applies the LT predicate on the "heart_rate" field.
func HeartRateLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldHeartRate, v))
}

// HeartRateLTE applies the LTE predicate on the "heart_rate" field.
func HeartRateLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldHeartRate, v))
}

// HeartRateIsNil applies the IsNil predicate on the "heart_rate" field.
func HeartRateIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldHeartRate))
}

// HeartRateNotNil applies the NotNil predicate on the "heart_rate" field.
func HeartRateNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldHeartRate))
}

// BloodPressureEQ applies the EQ predicate on the "blood_pressure" field.
func BloodPressureEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldBloodPressure, v))
}

// BloodPressureNEQ applies the NEQ predicate on the "blood_pressure" field.
func BloodPressureNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldBloodPressure, v))
}

// BloodPressureIn applies the In predicate on the "blood_pressure" field.
func BloodPressureIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldBloodPressure, vs...))
}

// BloodPressureNotIn applies the NotIn predicate on the "blood_pressure" field.
func BloodPressureNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldBloodPressure, vs...))
}

// BloodPressureGT applies the GT predicate on the "blood_pressure" field.
func BloodPressureGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldBloodPressure, v))
}

// BloodPressureGTE applies the GTE predicate on the "blood_pressure" field.
func BloodPressureGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldBloodPressure, v))
}

// BloodPressureLT applies the LT predicate on the "blood_pressure" field.
func BloodPressureLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldBloodPressure, v))
}

// BloodPressureLTE applies the LTE predicate on the "blood_pressure" field.
func BloodPressureLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldBloodPressure, v))
}

// BloodPressureContains applies the Contains predicate on the "blood_pressure" field.
func BloodPressureContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldBloodPressure, v))
}

// BloodPressureHasPrefix applies the HasPrefix predicate on the "blood_pressure" field.
func BloodPressureHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldBloodPressure, v))
}

// BloodPressureHasSuffix applies the HasSuffix predicate on the "blood_pressure" field.
func BloodPressureHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldBloodPressure, v))
}

// BloodPressureIsNil applies the IsNil predicate on the "blood_pressure" field.
func BloodPressureIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldBloodPressure))
}

// BloodPressureNotNil applies the NotNil predicate on the "blood_pressure" field.
func BloodPressureNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldBloodPressure))
}

// BloodPressureEqualFold applies the EqualFold predicate on the "blood_pressure" field.
func BloodPressureEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldBloodPressure, v))
}

// BloodPressureContainsFold applies the ContainsFold predicate on the "blood_pressure" field.
func BloodPressureContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldBloodPressure, v))
}

// OxygenSaturationEQ applies the EQ predicate on the "oxygen_saturation" field.
func OxygenSaturationEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldOxygenSaturation, v))
}

// OxygenSaturationNEQ applies the NEQ predicate on the "oxygen_saturation" field.
func OxygenSaturationNEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldOxygenSaturation, v))
}

// OxygenSaturationIn applies the In predicate on the "oxygen_saturation" field.
func OxygenSaturationIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldOxygenSaturation, vs...))
}

// OxygenSaturationNotIn applies the NotIn predicate on the "oxygen_saturation" field.
func OxygenSaturationNotIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldOxygenSaturation, vs...))
}

// OxygenSaturationGT applies the GT predicate on the "oxygen_saturation" field.
func OxygenSaturationGT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldOxygenSaturation, v))
}

// OxygenSaturationGTE applies the GTE predicate on the "oxygen_saturation" field.
func OxygenSaturationGTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldOxygenSaturation, v))
}

// OxygenSaturationLT applies the LT predicate on the "oxygen_saturation" field.
func OxygenSaturationLT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldOxygenSaturation, v))
}

// OxygenSaturationLTE applies the LTE predicate on the "oxygen_saturation" field.
func OxygenSaturationLTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldOxygenSaturation, v))
}

// OxygenSaturationIsNil applies the IsNil predicate on the "oxygen_saturation" field.
func OxygenSaturationIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldOxygenSaturation))
}

// OxygenSaturationNotNil applies the NotNil predicate on the "oxygen_saturation" field.
func OxygenSaturationNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldOxygenSaturation))
}

// BloodGlucoseEQ applies the EQ predicate on the "blood_glucose" field.
func BloodGlucoseEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldBloodGlucose, v))
}

// BloodGlucoseNEQ applies the NEQ predicate on the "blood_glucose" field.
func BloodGlucoseNEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldBloodGlucose, v))
}

// BloodGlucoseIn applies the In predicate on the "blood_glucose" field.
func BloodGlucoseIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldBloodGlucose, vs...))
}

// BloodGlucoseNotIn applies the NotIn predicate on the "blood_glucose" field.
func BloodGlucoseNotIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldBloodGlucose, vs...))
}

// BloodGlucoseGT applies the GT predicate on the "blood_glucose" field.
func BloodGlucoseGT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldBloodGlucose, v))
}

// BloodGlucoseGTE applies the GTE predicate on the "blood_glucose" field.
func BloodGlucoseGTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldBloodGlucose, v))
}

// BloodGlucoseLT applies the LT predicate on the "blood_glucose" field.
func BloodGlucoseLT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldBloodGlucose, v))
}

// BloodGlucoseLTE applies the LTE predicate on the "blood_glucose" field.
func BloodGlucoseLTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldBloodGlucose, v))
}

// BloodGlucoseIsNil applies the IsNil predicate on the "blood_glucose" field.
func BloodGlucoseIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldBloodGlucose))
}

// BloodGlucoseNotNil applies the NotNil predicate on the "blood_glucose" field.
func BloodGlucoseNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldBloodGlucose))
}

// WeightEQ applies the EQ predicate on the "weight" field.
func WeightEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldWeight, v))
}

// WeightNEQ applies the NEQ predicate on the "weight" field.
func WeightNEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldWeight, v))
}

// WeightIn applies the In predicate on the "weight" field.
func WeightIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldWeight, vs...))
}

// WeightNotIn applies the NotIn predicate on the "weight" field.
func WeightNotIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldWeight, vs...))
}

// WeightGT applies the GT predicate on the "weight" field.
func WeightGT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldWeight, v))
}

// WeightGTE applies the GTE predicate on the "weight" field.
func WeightGTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldWeight, v))
}

// WeightLT applies the LT predicate on the "weight" field.
func WeightLT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldWeight, v))
}

// WeightLTE applies the LTE predicate on the "weight" field.
func WeightLTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldWeight, v))
}

// WeightIsNil applies the IsNil predicate on the "weight" field.
func WeightIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldWeight))
}

// WeightNotNil applies the NotNil predicate on the "weight" field.
func WeightNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldWeight))
}

// WaistCircumferenceEQ applies the EQ predicate on the "waist_circumference" field.
func WaistCircumferenceEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldWaistCircumference, v))
}

// WaistCircumferenceNEQ applies the NEQ predicate on the "waist_circumference" field.
func WaistCircumferenceNEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldWaistCircumference, v))
}

// WaistCircumferenceIn applies the In predicate on the "waist_circumference" field.
func WaistCircumferenceIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldWaistCircumference, vs...))
}

// WaistCircumferenceNotIn applies the NotIn predicate on the "waist_circumference" field.
func WaistCircumferenceNotIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldWaistCircumference, vs...))
}

// WaistCircumferenceGT applies the GT predicate on the "waist_circumference" field.
func WaistCircumferenceGT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldWaistCircumference, v))
}

// WaistCircumferenceGTE applies the GTE predicate on the "waist_circumference" field.
func WaistCircumferenceGTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldWaistCircumference, v))
}

// WaistCircumferenceLT applies the LT predicate on the "waist_circumference" field.
func WaistCircumferenceLT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldWaistCircumference, v))
}

// WaistCircumferenceLTE applies the LTE predicate on the "waist_circumference" field.
func WaistCircumferenceLTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldWaistCircumference, v))
}

// WaistCircumferenceIsNil applies the IsNil predicate on the "waist_circumference" field.
func WaistCircumferenceIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldWaistCircumference))
}

// WaistCircumferenceNotNil applies the NotNil predicate on the "waist_circumference" field.
func WaistCircumferenceNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldWaistCircumference))
}

// BodyFatEQ applies the EQ predicate on the "body_fat" field.
func BodyFatEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldBodyFat, v))
}

// BodyFatNEQ applies the NEQ predicate on the "body_fat" field.
func BodyFatNEQ(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldBodyFat, v))
}

// BodyFatIn applies the In predicate on the "body_fat" field.
func BodyFatIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldBodyFat, vs...))
}

// BodyFatNotIn applies the NotIn predicate on the "body_fat" field.
func BodyFatNotIn(vs ...float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldBodyFat, vs...))
}

// BodyFatGT applies the GT predicate on the "body_fat" field.
func BodyFatGT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldBodyFat, v))
}

// BodyFatGTE applies the GTE predicate on the "body_fat" field.
func BodyFatGTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldBodyFat, v))
}

// BodyFatLT applies the LT predicate on the "body_fat" field.
func BodyFatLT(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldBodyFat, v))
}

// BodyFatLTE applies the LTE predicate on the "body_fat" field.
func BodyFatLTE(v float64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldBodyFat, v))
}

// BodyFatIsNil applies the IsNil predicate on the "body_fat" field.
func BodyFatIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldBodyFat))
}

// BodyFatNotNil applies the NotNil predicate on the "body_fat" field.
func BodyFatNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldBodyFat))
}

// DiagnosisEQ applies the EQ predicate on the "diagnosis" field.
func DiagnosisEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDiagnosis, v))
}

// DiagnosisNEQ applies the NEQ predicate on the "diagnosis" field.
func DiagnosisNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDiagnosis, v))
}

// DiagnosisIn applies the In predicate on the "diagnosis" field.
func DiagnosisIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDiagnosis, vs...))
}

// DiagnosisNotIn applies the NotIn predicate on the "diagnosis" field.
func DiagnosisNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDiagnosis, vs...))
}

// DiagnosisGT applies the GT predicate on the "diagnosis" field.
func DiagnosisGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDiagnosis, v))
}

// DiagnosisGTE applies the GTE predicate on the "diagnosis" field.
func DiagnosisGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDiagnosis, v))
}

// DiagnosisLT applies the LT predicate on the "diagnosis" field.
func DiagnosisLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDiagnosis, v))
}

// DiagnosisLTE applies the LTE predicate on the "diagnosis" field.
func DiagnosisLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDiagnosis, v))
}

// DiagnosisContains applies the Contains predicate on the "diagnosis" field.
func DiagnosisContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldDiagnosis, v))
}

// DiagnosisHasPrefix applies the HasPrefix predicate on the "diagnosis" field.
func DiagnosisHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldDiagnosis, v))
}

// DiagnosisHasSuffix applies the HasSuffix predicate on the "diagnosis" field.
func DiagnosisHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldDiagnosis, v))
}

// DiagnosisIsNil applies the IsNil predicate on the "diagnosis" field.
func DiagnosisIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDiagnosis))
}

// DiagnosisNotNil applies the NotNil predicate on the "diagnosis" field.
func DiagnosisNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDiagnosis))
}

// DiagnosisEqualFold applies the EqualFold predicate on the "diagnosis" field.
func DiagnosisEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldDiagnosis, v))
}

// DiagnosisContainsFold applies the ContainsFold predicate on the "diagnosis" field.
func DiagnosisContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldDiagnosis, v))
}

// DietTherapyEQ applies the EQ predicate on the "diet_therapy" field.
func DietTherapyEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDietTherapy, v))
}

// DietTherapyNEQ applies the NEQ predicate on the "diet_therapy" field.
func DietTherapyNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDietTherapy, v))
}

// DietTherapyIn applies the In predicate on the "diet_therapy" field.
func DietTherapyIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDietTherapy, vs...))
}

// DietTherapyNotIn applies the NotIn predicate on the "diet_therapy" field.
func DietTherapyNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDietTherapy, vs...))
}

// DietTherapyGT applies the GT predicate on the "diet_therapy" field.
func DietTherapyGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDietTherapy, v))
}

// DietTherapyGTE applies the GTE predicate on the "diet_therapy" field.
func DietTherapyGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDietTherapy, v))
}

// DietTherapyLT applies the LT predicate on the "diet_therapy" field.
func DietTherapyLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDietTherapy, v))
}

// DietTherapyLTE applies the LTE predicate on the "diet_therapy" field.
func DietTherapyLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDietTherapy, v))
}

// DietTherapyIsNil applies the IsNil predicate on the "diet_therapy" field.
func DietTherapyIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDietTherapy))
}

// DietTherapyNotNil applies the NotNil predicate on the "diet_therapy" field.
func DietTherapyNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDietTherapy))
}

// ExerciseTherapyEQ applies the EQ predicate on the "exercise_therapy" field.
func ExerciseTherapyEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldExerciseTherapy, v))
}

// ExerciseTherapyNEQ applies the NEQ predicate on the "exercise_therapy" field.
func ExerciseTherapyNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldExerciseTherapy, v))
}

// ExerciseTherapyIn applies the In predicate on the "exercise_therapy" field.
func ExerciseTherapyIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldExerciseTherapy, vs...))
}

// ExerciseTherapyNotIn applies the NotIn predicate on the "exercise_therapy" field.
func ExerciseTherapyNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldExerciseTherapy, vs...))
}

// ExerciseTherapyGT applies the GT predicate on the "exercise_therapy" field.
func ExerciseTherapyGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldExerciseTherapy, v))
}

// ExerciseTherapyGTE applies the GTE predicate on the "exercise_therapy" field.
func ExerciseTherapyGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldExerciseTherapy, v))
}

// ExerciseTherapyLT applies the LT predicate on the "exercise_therapy" field.
func ExerciseTherapyLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldExerciseTherapy, v))
}

// ExerciseTherapyLTE applies the LTE predicate on the "exercise_therapy" field.
func ExerciseTherapyLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldExerciseTherapy, v))
}

// ExerciseTherapyIsNil applies the IsNil predicate on the "exercise_therapy" field.
func ExerciseTherapyIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldExerciseTherapy))
}

// ExerciseTherapyNotNil applies the NotNil predicate on the "exercise_therapy" field.
func ExerciseTherapyNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldExerciseTherapy))
}

// MedicationTherapyEQ applies the EQ predicate on the "medication_therapy" field.
func MedicationTherapyEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldMedicationTherapy, v))
}

// MedicationTherapyNEQ applies the NEQ predicate on the "medication_therapy" field.
func MedicationTherapyNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldMedicationTherapy, v))
}

// MedicationTherapyIn applies the In predicate on the "medication_therapy" field.
func MedicationTherapyIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldMedicationTherapy, vs...))
}

// MedicationTherapyNotIn applies the NotIn predicate on the "medication_therapy" field.
func MedicationTherapyNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldMedicationTherapy, vs...))
}

// MedicationTherapyGT applies the GT predicate on the "medication_therapy" field.
func MedicationTherapyGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldMedicationTherapy, v))
}

// MedicationTherapyGTE applies the GTE predicate on the "medication_therapy" field.
func MedicationTherapyGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldMedicationTherapy, v))
}

// MedicationTherapyLT applies the LT predicate on the "medication_therapy" field.
func MedicationTherapyLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldMedicationTherapy, v))
}

// MedicationTherapyLTE applies the LTE predicate on the "medication_therapy" field.
func MedicationTherapyLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldMedicationTherapy, v))
}

// MedicationTherapyIsNil applies the IsNil predicate on the "medication_therapy" field.
func MedicationTherapyIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldMedicationTherapy))
}

// MedicationTherapyNotNil applies the NotNil predicate on the "medication_therapy" field.
func MedicationTherapyNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldMedicationTherapy))
}

// TreatmentPlanEQ applies the EQ predicate on the "treatment_plan" field.
func TreatmentPlanEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldTreatmentPlan, v))
}

// TreatmentPlanNEQ applies the NEQ predicate on the "treatment_plan" field.
func TreatmentPlanNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldTreatmentPlan, v))
}

// TreatmentPlanIn applies the In predicate on the "treatment_plan" field.
func TreatmentPlanIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldTreatmentPlan, vs...))
}

// TreatmentPlanNotIn applies the NotIn predicate on the "treatment_plan" field.
func TreatmentPlanNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldTreatmentPlan, vs...))
}

// TreatmentPlanGT applies the GT predicate on the "treatment_plan" field.
func TreatmentPlanGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldTreatmentPlan, v))
}

// TreatmentPlanGTE applies the GTE predicate on the "treatment_plan" field.
func TreatmentPlanGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldTreatmentPlan, v))
}

// TreatmentPlanLT applies the LT predicate on the "treatment_plan" field.
func TreatmentPlanLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldTreatmentPlan, v))
}

// TreatmentPlanLTE applies the LTE predicate on the "treatment_plan" field.
func TreatmentPlanLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldTreatmentPlan, v))
}

// TreatmentPlanContains applies the Contains predicate on the "treatment_plan" field.
func TreatmentPlanContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldTreatmentPlan, v))
}

// TreatmentPlanHasPrefix applies the HasPrefix predicate on the "treatment_plan" field.
func TreatmentPlanHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldTreatmentPlan, v))
}

// TreatmentPlanHasSuffix applies the HasSuffix predicate on the "treatment_plan" field.
func TreatmentPlanHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldTreatmentPlan, v))
}

// TreatmentPlanIsNil applies the IsNil predicate on the "treatment_plan" field.
func TreatmentPlanIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldTreatmentPlan))
}

// TreatmentPlanNotNil applies the NotNil predicate on the "treatment_plan" field.
func TreatmentPlanNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldTreatmentPlan))
}

// TreatmentPlanEqualFold applies the EqualFold predicate on the "treatment_plan" field.
func TreatmentPlanEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldTreatmentPlan, v))
}

// TreatmentPlanContainsFold applies the ContainsFold predicate on the "treatment_plan" field.
func TreatmentPlanContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldTreatmentPlan, v))
}

// DoctorIDEQ applies the EQ predicate on the "doctor_id" field.
func DoctorIDEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDoctorID, v))
}

// DoctorIDNEQ applies the NEQ predicate on the "doctor_id" field.
func DoctorIDNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDoctorID, v))
}

// DoctorIDIn applies the In predicate on the "doctor_id" field.
func DoctorIDIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDoctorID, vs...))
}

// DoctorIDNotIn applies the NotIn predicate on the "doctor_id" field.
func DoctorIDNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDoctorID, vs...))
}

// DoctorIDGT applies the GT predicate on the "doctor_id" field.
func DoctorIDGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDoctorID, v))
}

// DoctorIDGTE applies the GTE predicate on the "doctor_id" field.
func DoctorIDGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDoctorID, v))
}

// DoctorIDLT applies the LT predicate on the "doctor_id" field.
func DoctorIDLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDoctorID, v))
}

// DoctorIDLTE applies the LTE predicate on the "doctor_id" field.
func DoctorIDLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDoctorID, v))
}

// DoctorIDContains applies the Contains predicate on the "doctor_id" field.
func DoctorIDContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldDoctorID, v))
}

// DoctorIDHasPrefix applies the HasPrefix predicate on the "doctor_id" field.
func DoctorIDHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldDoctorID, v))
}

// DoctorIDHasSuffix applies the HasSuffix predicate on the "doctor_id" field.
func DoctorIDHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldDoctorID, v))
}

// DoctorIDIsNil applies the IsNil predicate on the "doctor_id" field.
func DoctorIDIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDoctorID))
}

// DoctorIDNotNil applies the NotNil predicate on the "doctor_id" field.
func DoctorIDNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDoctorID))
}

// DoctorIDEqualFold applies the EqualFold predicate on the "doctor_id" field.
func DoctorIDEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldDoctorID, v))
}

// DoctorIDContainsFold applies the ContainsFold predicate on the "doctor_id" field.
func DoctorIDContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldDoctorID, v))
}

// AppointmentIDEQ applies the EQ predicate on the "appointment_id" field.
func AppointmentIDEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAppointmentID, v))
}

// AppointmentIDNEQ applies the NEQ predicate on the "appointment_id" field.
func AppointmentIDNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldAppointmentID, v))
}

// AppointmentIDIn applies the In predicate on the "appointment_id" field.
func AppointmentIDIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldAppointmentID, vs...))
}

// AppointmentIDNotIn applies the NotIn predicate on the "appointment_id" field.
func AppointmentIDNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldAppointmentID, vs...))
}

// AppointmentIDGT applies the GT predicate on the "appointment_id" field.
func AppointmentIDGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldAppointmentID, v))
}

// AppointmentIDGTE applies the GTE predicate on the "appointment_id" field.
func AppointmentIDGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldAppointmentID, v))
}

// AppointmentIDLT applies the LT predicate on the "appointment_id" field.
func AppointmentIDLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldAppointmentID, v))
}

// AppointmentIDLTE applies the LTE predicate on the "appointment_id" field.
func AppointmentIDLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldAppointmentID, v))
}

// AppointmentIDContains applies the Contains predicate on the "appointment_id" field.
func AppointmentIDContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldAppointmentID, v))
}

// AppointmentIDHasPrefix applies the HasPrefix predicate on the "appointment_id" field.
func AppointmentIDHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldAppointmentID, v))
}

// AppointmentIDHasSuffix applies the HasSuffix predicate on the "appointment_id" field.
func AppointmentIDHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldAppointmentID, v))
}

// AppointmentIDIsNil applies the IsNil predicate on the "appointment_id" field.
func AppointmentIDIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldAppointmentID))
}

// AppointmentIDNotNil applies the NotNil predicate on the "appointment_id" field.
func AppointmentIDNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldAppointmentID))
}

// AppointmentIDEqualFold applies the EqualFold predicate on the "appointment_id" field.
func AppointmentIDEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldAppointmentID, v))
}

// AppointmentIDContainsFold applies the ContainsFold predicate on the "appointment_id" field.
func AppointmentIDContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldAppointmentID, v))
}

// RemarksEQ applies the EQ predicate on the "remarks" field.
func RemarksEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldRemarks, v))
}

// RemarksNEQ applies the NEQ predicate on the "remarks" field.
func RemarksNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldRemarks, v))
}

// RemarksIn applies the In predicate on the "remarks" field.
func RemarksIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldRemarks, vs...))
}

// RemarksNotIn applies the NotIn predicate on the "remarks" field.
func RemarksNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldRemarks, vs...))
}

// RemarksGT applies the GT predicate on the "remarks" field.
func RemarksGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldRemarks, v))
}

// RemarksGTE applies the GTE predicate on the "remarks" field.
func RemarksGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldRemarks, v))
}

// RemarksLT applies the LT predicate on the "remarks" field.
func RemarksLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldRemarks, v))
}

// RemarksLTE applies the LTE predicate on the "remarks" field.
func RemarksLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldRemarks, v))
}

// RemarksContains applies the Contains predicate on the "remarks" field.
func RemarksContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldRemarks, v))
}

// RemarksHasPrefix applies the HasPrefix predicate on the "remarks" field.
func RemarksHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldRemarks, v))
}

// RemarksHasSuffix applies the HasSuffix predicate on the "remarks" field.
func RemarksHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldRemarks, v))
}

// RemarksIsNil applies the IsNil predicate on the "remarks" field.
func RemarksIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldRemarks))
}

// RemarksNotNil applies the NotNil predicate on the "remarks" field.
func RemarksNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldRemarks))
}

// RemarksEqualFold applies the EqualFold predicate on the "remarks" field.
func RemarksEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldRemarks, v))
}

// RemarksContainsFold applies the ContainsFold predicate on the "remarks" field.
func RemarksContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldRemarks, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldUserID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MedicalRecord) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MedicalRecord) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MedicalRecord) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.NotPredicates(p))
}
