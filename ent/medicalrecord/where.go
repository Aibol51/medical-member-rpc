// Code generated by ent, DO NOT EDIT.

package medicalrecord

import (
	"time"

	"entgo.io/ent/dialect/sql"
	uuid "github.com/gofrs/uuid/v5"
	"github.com/suyuan32/simple-admin-member-rpc/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUpdatedAt, v))
}

// PatientName applies equality check predicate on the "patient_name" field. It's identical to PatientNameEQ.
func PatientName(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPatientName, v))
}

// PhoneNumber applies equality check predicate on the "phone_number" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPhoneNumber, v))
}

// Gender applies equality check predicate on the "gender" field. It's identical to GenderEQ.
func Gender(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldGender, v))
}

// Age applies equality check predicate on the "age" field. It's identical to AgeEQ.
func Age(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAge, v))
}

// VisitTime applies equality check predicate on the "visit_time" field. It's identical to VisitTimeEQ.
func VisitTime(v int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldVisitTime, v))
}

// Diagnosis applies equality check predicate on the "diagnosis" field. It's identical to DiagnosisEQ.
func Diagnosis(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDiagnosis, v))
}

// TreatmentPlan applies equality check predicate on the "treatment_plan" field. It's identical to TreatmentPlanEQ.
func TreatmentPlan(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldTreatmentPlan, v))
}

// Prescription applies equality check predicate on the "prescription" field. It's identical to PrescriptionEQ.
func Prescription(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPrescription, v))
}

// ExaminationResults applies equality check predicate on the "examination_results" field. It's identical to ExaminationResultsEQ.
func ExaminationResults(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldExaminationResults, v))
}

// DoctorAdvice applies equality check predicate on the "doctor_advice" field. It's identical to DoctorAdviceEQ.
func DoctorAdvice(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDoctorAdvice, v))
}

// DoctorID applies equality check predicate on the "doctor_id" field. It's identical to DoctorIDEQ.
func DoctorID(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDoctorID, v))
}

// Department applies equality check predicate on the "department" field. It's identical to DepartmentEQ.
func Department(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDepartment, v))
}

// AppointmentID applies equality check predicate on the "appointment_id" field. It's identical to AppointmentIDEQ.
func AppointmentID(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAppointmentID, v))
}

// Remarks applies equality check predicate on the "remarks" field. It's identical to RemarksEQ.
func Remarks(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldRemarks, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUserID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldUpdatedAt, v))
}

// PatientNameEQ applies the EQ predicate on the "patient_name" field.
func PatientNameEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPatientName, v))
}

// PatientNameNEQ applies the NEQ predicate on the "patient_name" field.
func PatientNameNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldPatientName, v))
}

// PatientNameIn applies the In predicate on the "patient_name" field.
func PatientNameIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldPatientName, vs...))
}

// PatientNameNotIn applies the NotIn predicate on the "patient_name" field.
func PatientNameNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldPatientName, vs...))
}

// PatientNameGT applies the GT predicate on the "patient_name" field.
func PatientNameGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldPatientName, v))
}

// PatientNameGTE applies the GTE predicate on the "patient_name" field.
func PatientNameGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldPatientName, v))
}

// PatientNameLT applies the LT predicate on the "patient_name" field.
func PatientNameLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldPatientName, v))
}

// PatientNameLTE applies the LTE predicate on the "patient_name" field.
func PatientNameLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldPatientName, v))
}

// PatientNameContains applies the Contains predicate on the "patient_name" field.
func PatientNameContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldPatientName, v))
}

// PatientNameHasPrefix applies the HasPrefix predicate on the "patient_name" field.
func PatientNameHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldPatientName, v))
}

// PatientNameHasSuffix applies the HasSuffix predicate on the "patient_name" field.
func PatientNameHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldPatientName, v))
}

// PatientNameIsNil applies the IsNil predicate on the "patient_name" field.
func PatientNameIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldPatientName))
}

// PatientNameNotNil applies the NotNil predicate on the "patient_name" field.
func PatientNameNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldPatientName))
}

// PatientNameEqualFold applies the EqualFold predicate on the "patient_name" field.
func PatientNameEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldPatientName, v))
}

// PatientNameContainsFold applies the ContainsFold predicate on the "patient_name" field.
func PatientNameContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldPatientName, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phone_number" field.
func PhoneNumberEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phone_number" field.
func PhoneNumberNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phone_number" field.
func PhoneNumberIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phone_number" field.
func PhoneNumberNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phone_number" field.
func PhoneNumberGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phone_number" field.
func PhoneNumberGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phone_number" field.
func PhoneNumberLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phone_number" field.
func PhoneNumberLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phone_number" field.
func PhoneNumberContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phone_number" field.
func PhoneNumberHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phone_number" field.
func PhoneNumberHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberIsNil applies the IsNil predicate on the "phone_number" field.
func PhoneNumberIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldPhoneNumber))
}

// PhoneNumberNotNil applies the NotNil predicate on the "phone_number" field.
func PhoneNumberNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldPhoneNumber))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phone_number" field.
func PhoneNumberEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phone_number" field.
func PhoneNumberContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldGender, vs...))
}

// GenderGT applies the GT predicate on the "gender" field.
func GenderGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldGender, v))
}

// GenderGTE applies the GTE predicate on the "gender" field.
func GenderGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldGender, v))
}

// GenderLT applies the LT predicate on the "gender" field.
func GenderLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldGender, v))
}

// GenderLTE applies the LTE predicate on the "gender" field.
func GenderLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldGender, v))
}

// GenderIsNil applies the IsNil predicate on the "gender" field.
func GenderIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldGender))
}

// GenderNotNil applies the NotNil predicate on the "gender" field.
func GenderNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldGender))
}

// AgeEQ applies the EQ predicate on the "age" field.
func AgeEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAge, v))
}

// AgeNEQ applies the NEQ predicate on the "age" field.
func AgeNEQ(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldAge, v))
}

// AgeIn applies the In predicate on the "age" field.
func AgeIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldAge, vs...))
}

// AgeNotIn applies the NotIn predicate on the "age" field.
func AgeNotIn(vs ...int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldAge, vs...))
}

// AgeGT applies the GT predicate on the "age" field.
func AgeGT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldAge, v))
}

// AgeGTE applies the GTE predicate on the "age" field.
func AgeGTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldAge, v))
}

// AgeLT applies the LT predicate on the "age" field.
func AgeLT(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldAge, v))
}

// AgeLTE applies the LTE predicate on the "age" field.
func AgeLTE(v int32) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldAge, v))
}

// AgeIsNil applies the IsNil predicate on the "age" field.
func AgeIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldAge))
}

// AgeNotNil applies the NotNil predicate on the "age" field.
func AgeNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldAge))
}

// VisitTimeEQ applies the EQ predicate on the "visit_time" field.
func VisitTimeEQ(v int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldVisitTime, v))
}

// VisitTimeNEQ applies the NEQ predicate on the "visit_time" field.
func VisitTimeNEQ(v int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldVisitTime, v))
}

// VisitTimeIn applies the In predicate on the "visit_time" field.
func VisitTimeIn(vs ...int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldVisitTime, vs...))
}

// VisitTimeNotIn applies the NotIn predicate on the "visit_time" field.
func VisitTimeNotIn(vs ...int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldVisitTime, vs...))
}

// VisitTimeGT applies the GT predicate on the "visit_time" field.
func VisitTimeGT(v int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldVisitTime, v))
}

// VisitTimeGTE applies the GTE predicate on the "visit_time" field.
func VisitTimeGTE(v int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldVisitTime, v))
}

// VisitTimeLT applies the LT predicate on the "visit_time" field.
func VisitTimeLT(v int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldVisitTime, v))
}

// VisitTimeLTE applies the LTE predicate on the "visit_time" field.
func VisitTimeLTE(v int64) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldVisitTime, v))
}

// VisitTimeIsNil applies the IsNil predicate on the "visit_time" field.
func VisitTimeIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldVisitTime))
}

// VisitTimeNotNil applies the NotNil predicate on the "visit_time" field.
func VisitTimeNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldVisitTime))
}

// DiagnosisEQ applies the EQ predicate on the "diagnosis" field.
func DiagnosisEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDiagnosis, v))
}

// DiagnosisNEQ applies the NEQ predicate on the "diagnosis" field.
func DiagnosisNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDiagnosis, v))
}

// DiagnosisIn applies the In predicate on the "diagnosis" field.
func DiagnosisIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDiagnosis, vs...))
}

// DiagnosisNotIn applies the NotIn predicate on the "diagnosis" field.
func DiagnosisNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDiagnosis, vs...))
}

// DiagnosisGT applies the GT predicate on the "diagnosis" field.
func DiagnosisGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDiagnosis, v))
}

// DiagnosisGTE applies the GTE predicate on the "diagnosis" field.
func DiagnosisGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDiagnosis, v))
}

// DiagnosisLT applies the LT predicate on the "diagnosis" field.
func DiagnosisLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDiagnosis, v))
}

// DiagnosisLTE applies the LTE predicate on the "diagnosis" field.
func DiagnosisLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDiagnosis, v))
}

// DiagnosisContains applies the Contains predicate on the "diagnosis" field.
func DiagnosisContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldDiagnosis, v))
}

// DiagnosisHasPrefix applies the HasPrefix predicate on the "diagnosis" field.
func DiagnosisHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldDiagnosis, v))
}

// DiagnosisHasSuffix applies the HasSuffix predicate on the "diagnosis" field.
func DiagnosisHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldDiagnosis, v))
}

// DiagnosisIsNil applies the IsNil predicate on the "diagnosis" field.
func DiagnosisIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDiagnosis))
}

// DiagnosisNotNil applies the NotNil predicate on the "diagnosis" field.
func DiagnosisNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDiagnosis))
}

// DiagnosisEqualFold applies the EqualFold predicate on the "diagnosis" field.
func DiagnosisEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldDiagnosis, v))
}

// DiagnosisContainsFold applies the ContainsFold predicate on the "diagnosis" field.
func DiagnosisContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldDiagnosis, v))
}

// TreatmentPlanEQ applies the EQ predicate on the "treatment_plan" field.
func TreatmentPlanEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldTreatmentPlan, v))
}

// TreatmentPlanNEQ applies the NEQ predicate on the "treatment_plan" field.
func TreatmentPlanNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldTreatmentPlan, v))
}

// TreatmentPlanIn applies the In predicate on the "treatment_plan" field.
func TreatmentPlanIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldTreatmentPlan, vs...))
}

// TreatmentPlanNotIn applies the NotIn predicate on the "treatment_plan" field.
func TreatmentPlanNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldTreatmentPlan, vs...))
}

// TreatmentPlanGT applies the GT predicate on the "treatment_plan" field.
func TreatmentPlanGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldTreatmentPlan, v))
}

// TreatmentPlanGTE applies the GTE predicate on the "treatment_plan" field.
func TreatmentPlanGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldTreatmentPlan, v))
}

// TreatmentPlanLT applies the LT predicate on the "treatment_plan" field.
func TreatmentPlanLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldTreatmentPlan, v))
}

// TreatmentPlanLTE applies the LTE predicate on the "treatment_plan" field.
func TreatmentPlanLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldTreatmentPlan, v))
}

// TreatmentPlanContains applies the Contains predicate on the "treatment_plan" field.
func TreatmentPlanContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldTreatmentPlan, v))
}

// TreatmentPlanHasPrefix applies the HasPrefix predicate on the "treatment_plan" field.
func TreatmentPlanHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldTreatmentPlan, v))
}

// TreatmentPlanHasSuffix applies the HasSuffix predicate on the "treatment_plan" field.
func TreatmentPlanHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldTreatmentPlan, v))
}

// TreatmentPlanIsNil applies the IsNil predicate on the "treatment_plan" field.
func TreatmentPlanIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldTreatmentPlan))
}

// TreatmentPlanNotNil applies the NotNil predicate on the "treatment_plan" field.
func TreatmentPlanNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldTreatmentPlan))
}

// TreatmentPlanEqualFold applies the EqualFold predicate on the "treatment_plan" field.
func TreatmentPlanEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldTreatmentPlan, v))
}

// TreatmentPlanContainsFold applies the ContainsFold predicate on the "treatment_plan" field.
func TreatmentPlanContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldTreatmentPlan, v))
}

// PrescriptionEQ applies the EQ predicate on the "prescription" field.
func PrescriptionEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldPrescription, v))
}

// PrescriptionNEQ applies the NEQ predicate on the "prescription" field.
func PrescriptionNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldPrescription, v))
}

// PrescriptionIn applies the In predicate on the "prescription" field.
func PrescriptionIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldPrescription, vs...))
}

// PrescriptionNotIn applies the NotIn predicate on the "prescription" field.
func PrescriptionNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldPrescription, vs...))
}

// PrescriptionGT applies the GT predicate on the "prescription" field.
func PrescriptionGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldPrescription, v))
}

// PrescriptionGTE applies the GTE predicate on the "prescription" field.
func PrescriptionGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldPrescription, v))
}

// PrescriptionLT applies the LT predicate on the "prescription" field.
func PrescriptionLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldPrescription, v))
}

// PrescriptionLTE applies the LTE predicate on the "prescription" field.
func PrescriptionLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldPrescription, v))
}

// PrescriptionContains applies the Contains predicate on the "prescription" field.
func PrescriptionContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldPrescription, v))
}

// PrescriptionHasPrefix applies the HasPrefix predicate on the "prescription" field.
func PrescriptionHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldPrescription, v))
}

// PrescriptionHasSuffix applies the HasSuffix predicate on the "prescription" field.
func PrescriptionHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldPrescription, v))
}

// PrescriptionIsNil applies the IsNil predicate on the "prescription" field.
func PrescriptionIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldPrescription))
}

// PrescriptionNotNil applies the NotNil predicate on the "prescription" field.
func PrescriptionNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldPrescription))
}

// PrescriptionEqualFold applies the EqualFold predicate on the "prescription" field.
func PrescriptionEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldPrescription, v))
}

// PrescriptionContainsFold applies the ContainsFold predicate on the "prescription" field.
func PrescriptionContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldPrescription, v))
}

// ExaminationResultsEQ applies the EQ predicate on the "examination_results" field.
func ExaminationResultsEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldExaminationResults, v))
}

// ExaminationResultsNEQ applies the NEQ predicate on the "examination_results" field.
func ExaminationResultsNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldExaminationResults, v))
}

// ExaminationResultsIn applies the In predicate on the "examination_results" field.
func ExaminationResultsIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldExaminationResults, vs...))
}

// ExaminationResultsNotIn applies the NotIn predicate on the "examination_results" field.
func ExaminationResultsNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldExaminationResults, vs...))
}

// ExaminationResultsGT applies the GT predicate on the "examination_results" field.
func ExaminationResultsGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldExaminationResults, v))
}

// ExaminationResultsGTE applies the GTE predicate on the "examination_results" field.
func ExaminationResultsGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldExaminationResults, v))
}

// ExaminationResultsLT applies the LT predicate on the "examination_results" field.
func ExaminationResultsLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldExaminationResults, v))
}

// ExaminationResultsLTE applies the LTE predicate on the "examination_results" field.
func ExaminationResultsLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldExaminationResults, v))
}

// ExaminationResultsContains applies the Contains predicate on the "examination_results" field.
func ExaminationResultsContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldExaminationResults, v))
}

// ExaminationResultsHasPrefix applies the HasPrefix predicate on the "examination_results" field.
func ExaminationResultsHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldExaminationResults, v))
}

// ExaminationResultsHasSuffix applies the HasSuffix predicate on the "examination_results" field.
func ExaminationResultsHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldExaminationResults, v))
}

// ExaminationResultsIsNil applies the IsNil predicate on the "examination_results" field.
func ExaminationResultsIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldExaminationResults))
}

// ExaminationResultsNotNil applies the NotNil predicate on the "examination_results" field.
func ExaminationResultsNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldExaminationResults))
}

// ExaminationResultsEqualFold applies the EqualFold predicate on the "examination_results" field.
func ExaminationResultsEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldExaminationResults, v))
}

// ExaminationResultsContainsFold applies the ContainsFold predicate on the "examination_results" field.
func ExaminationResultsContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldExaminationResults, v))
}

// DoctorAdviceEQ applies the EQ predicate on the "doctor_advice" field.
func DoctorAdviceEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDoctorAdvice, v))
}

// DoctorAdviceNEQ applies the NEQ predicate on the "doctor_advice" field.
func DoctorAdviceNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDoctorAdvice, v))
}

// DoctorAdviceIn applies the In predicate on the "doctor_advice" field.
func DoctorAdviceIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDoctorAdvice, vs...))
}

// DoctorAdviceNotIn applies the NotIn predicate on the "doctor_advice" field.
func DoctorAdviceNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDoctorAdvice, vs...))
}

// DoctorAdviceGT applies the GT predicate on the "doctor_advice" field.
func DoctorAdviceGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDoctorAdvice, v))
}

// DoctorAdviceGTE applies the GTE predicate on the "doctor_advice" field.
func DoctorAdviceGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDoctorAdvice, v))
}

// DoctorAdviceLT applies the LT predicate on the "doctor_advice" field.
func DoctorAdviceLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDoctorAdvice, v))
}

// DoctorAdviceLTE applies the LTE predicate on the "doctor_advice" field.
func DoctorAdviceLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDoctorAdvice, v))
}

// DoctorAdviceContains applies the Contains predicate on the "doctor_advice" field.
func DoctorAdviceContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldDoctorAdvice, v))
}

// DoctorAdviceHasPrefix applies the HasPrefix predicate on the "doctor_advice" field.
func DoctorAdviceHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldDoctorAdvice, v))
}

// DoctorAdviceHasSuffix applies the HasSuffix predicate on the "doctor_advice" field.
func DoctorAdviceHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldDoctorAdvice, v))
}

// DoctorAdviceIsNil applies the IsNil predicate on the "doctor_advice" field.
func DoctorAdviceIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDoctorAdvice))
}

// DoctorAdviceNotNil applies the NotNil predicate on the "doctor_advice" field.
func DoctorAdviceNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDoctorAdvice))
}

// DoctorAdviceEqualFold applies the EqualFold predicate on the "doctor_advice" field.
func DoctorAdviceEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldDoctorAdvice, v))
}

// DoctorAdviceContainsFold applies the ContainsFold predicate on the "doctor_advice" field.
func DoctorAdviceContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldDoctorAdvice, v))
}

// DoctorIDEQ applies the EQ predicate on the "doctor_id" field.
func DoctorIDEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDoctorID, v))
}

// DoctorIDNEQ applies the NEQ predicate on the "doctor_id" field.
func DoctorIDNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDoctorID, v))
}

// DoctorIDIn applies the In predicate on the "doctor_id" field.
func DoctorIDIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDoctorID, vs...))
}

// DoctorIDNotIn applies the NotIn predicate on the "doctor_id" field.
func DoctorIDNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDoctorID, vs...))
}

// DoctorIDGT applies the GT predicate on the "doctor_id" field.
func DoctorIDGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDoctorID, v))
}

// DoctorIDGTE applies the GTE predicate on the "doctor_id" field.
func DoctorIDGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDoctorID, v))
}

// DoctorIDLT applies the LT predicate on the "doctor_id" field.
func DoctorIDLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDoctorID, v))
}

// DoctorIDLTE applies the LTE predicate on the "doctor_id" field.
func DoctorIDLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDoctorID, v))
}

// DoctorIDContains applies the Contains predicate on the "doctor_id" field.
func DoctorIDContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldDoctorID, v))
}

// DoctorIDHasPrefix applies the HasPrefix predicate on the "doctor_id" field.
func DoctorIDHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldDoctorID, v))
}

// DoctorIDHasSuffix applies the HasSuffix predicate on the "doctor_id" field.
func DoctorIDHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldDoctorID, v))
}

// DoctorIDIsNil applies the IsNil predicate on the "doctor_id" field.
func DoctorIDIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDoctorID))
}

// DoctorIDNotNil applies the NotNil predicate on the "doctor_id" field.
func DoctorIDNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDoctorID))
}

// DoctorIDEqualFold applies the EqualFold predicate on the "doctor_id" field.
func DoctorIDEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldDoctorID, v))
}

// DoctorIDContainsFold applies the ContainsFold predicate on the "doctor_id" field.
func DoctorIDContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldDoctorID, v))
}

// DepartmentEQ applies the EQ predicate on the "department" field.
func DepartmentEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldDepartment, v))
}

// DepartmentNEQ applies the NEQ predicate on the "department" field.
func DepartmentNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldDepartment, v))
}

// DepartmentIn applies the In predicate on the "department" field.
func DepartmentIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldDepartment, vs...))
}

// DepartmentNotIn applies the NotIn predicate on the "department" field.
func DepartmentNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldDepartment, vs...))
}

// DepartmentGT applies the GT predicate on the "department" field.
func DepartmentGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldDepartment, v))
}

// DepartmentGTE applies the GTE predicate on the "department" field.
func DepartmentGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldDepartment, v))
}

// DepartmentLT applies the LT predicate on the "department" field.
func DepartmentLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldDepartment, v))
}

// DepartmentLTE applies the LTE predicate on the "department" field.
func DepartmentLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldDepartment, v))
}

// DepartmentContains applies the Contains predicate on the "department" field.
func DepartmentContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldDepartment, v))
}

// DepartmentHasPrefix applies the HasPrefix predicate on the "department" field.
func DepartmentHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldDepartment, v))
}

// DepartmentHasSuffix applies the HasSuffix predicate on the "department" field.
func DepartmentHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldDepartment, v))
}

// DepartmentIsNil applies the IsNil predicate on the "department" field.
func DepartmentIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldDepartment))
}

// DepartmentNotNil applies the NotNil predicate on the "department" field.
func DepartmentNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldDepartment))
}

// DepartmentEqualFold applies the EqualFold predicate on the "department" field.
func DepartmentEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldDepartment, v))
}

// DepartmentContainsFold applies the ContainsFold predicate on the "department" field.
func DepartmentContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldDepartment, v))
}

// AppointmentIDEQ applies the EQ predicate on the "appointment_id" field.
func AppointmentIDEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldAppointmentID, v))
}

// AppointmentIDNEQ applies the NEQ predicate on the "appointment_id" field.
func AppointmentIDNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldAppointmentID, v))
}

// AppointmentIDIn applies the In predicate on the "appointment_id" field.
func AppointmentIDIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldAppointmentID, vs...))
}

// AppointmentIDNotIn applies the NotIn predicate on the "appointment_id" field.
func AppointmentIDNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldAppointmentID, vs...))
}

// AppointmentIDGT applies the GT predicate on the "appointment_id" field.
func AppointmentIDGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldAppointmentID, v))
}

// AppointmentIDGTE applies the GTE predicate on the "appointment_id" field.
func AppointmentIDGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldAppointmentID, v))
}

// AppointmentIDLT applies the LT predicate on the "appointment_id" field.
func AppointmentIDLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldAppointmentID, v))
}

// AppointmentIDLTE applies the LTE predicate on the "appointment_id" field.
func AppointmentIDLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldAppointmentID, v))
}

// AppointmentIDContains applies the Contains predicate on the "appointment_id" field.
func AppointmentIDContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldAppointmentID, v))
}

// AppointmentIDHasPrefix applies the HasPrefix predicate on the "appointment_id" field.
func AppointmentIDHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldAppointmentID, v))
}

// AppointmentIDHasSuffix applies the HasSuffix predicate on the "appointment_id" field.
func AppointmentIDHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldAppointmentID, v))
}

// AppointmentIDIsNil applies the IsNil predicate on the "appointment_id" field.
func AppointmentIDIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldAppointmentID))
}

// AppointmentIDNotNil applies the NotNil predicate on the "appointment_id" field.
func AppointmentIDNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldAppointmentID))
}

// AppointmentIDEqualFold applies the EqualFold predicate on the "appointment_id" field.
func AppointmentIDEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldAppointmentID, v))
}

// AppointmentIDContainsFold applies the ContainsFold predicate on the "appointment_id" field.
func AppointmentIDContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldAppointmentID, v))
}

// RemarksEQ applies the EQ predicate on the "remarks" field.
func RemarksEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldRemarks, v))
}

// RemarksNEQ applies the NEQ predicate on the "remarks" field.
func RemarksNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldRemarks, v))
}

// RemarksIn applies the In predicate on the "remarks" field.
func RemarksIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldRemarks, vs...))
}

// RemarksNotIn applies the NotIn predicate on the "remarks" field.
func RemarksNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldRemarks, vs...))
}

// RemarksGT applies the GT predicate on the "remarks" field.
func RemarksGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldRemarks, v))
}

// RemarksGTE applies the GTE predicate on the "remarks" field.
func RemarksGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldRemarks, v))
}

// RemarksLT applies the LT predicate on the "remarks" field.
func RemarksLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldRemarks, v))
}

// RemarksLTE applies the LTE predicate on the "remarks" field.
func RemarksLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldRemarks, v))
}

// RemarksContains applies the Contains predicate on the "remarks" field.
func RemarksContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldRemarks, v))
}

// RemarksHasPrefix applies the HasPrefix predicate on the "remarks" field.
func RemarksHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldRemarks, v))
}

// RemarksHasSuffix applies the HasSuffix predicate on the "remarks" field.
func RemarksHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldRemarks, v))
}

// RemarksIsNil applies the IsNil predicate on the "remarks" field.
func RemarksIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldRemarks))
}

// RemarksNotNil applies the NotNil predicate on the "remarks" field.
func RemarksNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldRemarks))
}

// RemarksEqualFold applies the EqualFold predicate on the "remarks" field.
func RemarksEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldRemarks, v))
}

// RemarksContainsFold applies the ContainsFold predicate on the "remarks" field.
func RemarksContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldRemarks, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.FieldContainsFold(FieldUserID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.MedicalRecord) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.MedicalRecord) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.MedicalRecord) predicate.MedicalRecord {
	return predicate.MedicalRecord(sql.NotPredicates(p))
}
